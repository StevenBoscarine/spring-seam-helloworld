<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cdi="http://www.jboss.org/schema/seam/spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.jboss.org/schema/seam/spring http://www.jboss.org/schema/seam/spring/seam-spring.xsd">

	<!-- Example Spring configuration.  This config registers 2 Spring beans and exposes 1 CDI bean to Spring. -->

	<!-- FIXME:  What does this do? -->
	<cdi:bean-manager />
	<!-- Register CDI Bean in Spring context.  This allows us to inject a CDI resource into Spring. -->
	<cdi:bean-reference id="cdiExample"
		type="org.jboss.as.quickstarts.seamspringhelloworld.jee.cdi.CDIExample" />

	<!-- We're using this as a simple example of a dependency wired in via Spring. -->
	<bean id="source" class="java.lang.String">
		<constructor-arg value="Spring" />
	</bean>

	<!-- Example of Spring 1.x wiring via XML -->
	<bean class="org.jboss.as.quickstarts.seamspringhelloworld.spring.SimpleBean">
		<!-- This should be familiar to Spring 1.x. Just demonstrating that we're 
			wiring in a Spring dependency -->
		<constructor-arg ref="source" />
		<!-- Wiring in a CDI dependency here. -->
		<constructor-arg ref="cdiExample" />
	</bean>

	<!-- Example of Spring dependency wired using 2.x annotations. -->
	<!-- If you're going to use Spring, you should definitely consider using 
		annotations over XML. -->
	<context:annotation-config />
	<!-- Scans package for anything with a @Component annotation or anything extending it, like @Service, @Controller, or @Repository -->
	<context:component-scan
		base-package="org.jboss.as.quickstarts.seamspringhelloworld.spring.autowired" />
</beans>